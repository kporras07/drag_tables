<?php

/**
 * @file
 * Main file for selectboxes module
 */

/**
 * Implements hook_element_info().
 */
function selectboxes_element_info() {
  return array(
    'selectboxes' => array(
      '#input' => TRUE,
      '#tree' => TRUE,
      '#process' => array('selectboxes_process'),
      '#element_validate' => array('selectboxes_element_validate'),
      '#theme' => array('selectboxes'),
      '#theme_wrappers' => array('form_element'),
    ),
  );
}

/**
 * Process callback for selectboxes element.
 */
function selectboxes_process($element, $form_state) {
  if (isset($element['#id']) && isset($element['#type'])) {
    $settings = array('id' => $element['#id'] . '-' . str_replace('_', '-', $element['#type']));
  }
  else {
    $settings = array();
  }
  $options = !empty($element['#options']) ? $element['#options'] : array();
  $allowed = !empty($element['#default_value']) ? array_diff($options, $element['#default_value'][$element['#type']]['selected']) : $options;
  $selected = !empty($element['#default_value']) ? $element['#default_value'][$element['#type']]['selected'] : array();

  $path = drupal_get_path('module', 'selectboxes');

  $element['selectboxes'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#tree' => TRUE,
    '#attached' => array(
      'js' => array(
        0 => array(
          'data' => array('selectBoxes' => $settings),
          'type' => 'setting',
        ),
        $path . '/selectboxes.js' => array(
          'type' => 'file',
        ),
      ),
      'css' => array(
        $path . '/selectboxes.css' => array(
          'type' => 'file',
        ),
      ),
    ),
    '#attributes' => array(
      'class' => array('selectboxes-elements'),
    ),
  );
  $element['selectboxes']['allowed'] = array(
    '#title' => t('Allowed'),
    '#type' => 'select',
    '#options' => $allowed,
    '#multiple' => TRUE,
    '#default_value' => array(),
    '#weight' => 0,
  );

  $element['selectboxes']['actions'] = array(
    '#type' => 'actions',
    '#weight' => 1,
  );

  $element['selectboxes']['actions']['to_selected'] = array(
    '#type' => 'markup',
    '#markup' => '<a class="button move-to-selected">' . t('Add to Selected') . '</a>',
    '#weight' => 2,
  );

  $element['selectboxes']['actions']['from_selected'] = array(
    '#type' => 'markup',
    '#markup' => '<a class="button move-from-selected">' . t('Remove from Selected') . '</a>',
    '#weight' => 3,
  );

  $element['selectboxes']['selected'] = array(
    '#title' => t('Selected'),
    '#type' => 'select',
    '#options' => $options,
    '#multiple' => TRUE,
    '#default_value' => $selected,
    '#weight' => 4,
  );

  $element['selectboxes']['value'] = array(
    '#type' => 'hidden',
    '#value' => drupal_json_encode($selected),
    '#attributes' => array('id' => 'selectboxes-value'),
  );

  $element['#value'] = array_keys($options);

  return $element;
}

/**
 * Element validate function for selectboxes.
 */
function selectboxes_element_validate($element, &$form_state) {
  $value = filter_xss($form_state['input'][$element['#name']][$element['#type']]['value']);
  $elements = drupal_json_decode($value);
  if (selectboxes_validate_selected_elements($elements, $element)) {
    $values = &$form_state['values'];
    $values[$element['#name']][$element['#type']]['selected'] = $elements;
  }
}

/**
 * Validate if all selected social networks are valid.
 */
function selectboxes_validate_selected_elements($elements, $element) {
  return empty(array_diff(array_keys($elements), array_keys($element['#options'])));
}
